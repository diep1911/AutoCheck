local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local http_request = http_request or request or (syn and syn.request)

-- UI hi·ªÉn th·ªã tr·∫°ng th√°i item
local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.Name = "ItemStatusUI"

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Position = UDim2.new(0, 10, 0, 100)
mainFrame.Size = UDim2.new(0, 250, 0, 120)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundTransparency = 0.2

local uiCorner = Instance.new("UICorner", mainFrame)
uiCorner.CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 25)
title.BackgroundTransparency = 1
title.Text = " Item Check - Kh√¥ng "
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamSemibold
title.TextSize = 18

local function createItemLabel(name, index)
    local label = Instance.new("TextLabel", mainFrame)
    label.Size = UDim2.new(1, -20, 0, 20)
    label.Position = UDim2.new(0, 10, 0, 30 + index * 22)
    label.BackgroundTransparency = 1
    label.Name = name .. "_Label"
    label.Text = name .. ": üî¥"
    label.Font = Enum.Font.Gotham
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    return label
end

local labels = {
    CDK = createItemLabel("CDK", 0),
    Valk = createItemLabel("Valk", 1),
    Mirror = createItemLabel("Mirror", 2),
    Godhuman = createItemLabel("Godhuman", 3)
}

-- H√†m ki·ªÉm tra item v√† update UI
local function updateStatusUI(data)
    for name, label in pairs(labels) do
        local has = data.items[name]
        if has then
            label.Text = name .. ": üü¢"
            label.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            label.Text = name .. ": üî¥"
            label.TextColor3 = Color3.fromRGB(255, 50, 50)
        end
    end
end

-- H√†m check item t·ªìn t·∫°i ·ªü b·∫•t k·ª≥ n∆°i n√†o
local function hasItem(itemName)
    local foundInBackpack = LocalPlayer.Backpack:FindFirstChild(itemName)
    local foundInCharacter = LocalPlayer.Character:FindFirstChild(itemName)
    local foundInInventory = nil

    -- Ki·ªÉm tra trong Inventory (n·∫øu c√≥)
    local inv = LocalPlayer:FindFirstChild("Inventory") or LocalPlayer:FindFirstChild("ItemInventory")
    if inv then
        foundInInventory = inv:FindFirstChild(itemName)
    end

    return foundInBackpack or foundInCharacter or foundInInventory
end

-- H√†m l·∫•y th√¥ng tin acc
local function getAccountData()
    return {
        username = LocalPlayer.Name,
        level = LocalPlayer.Data.Level.Value,
        beli = LocalPlayer.Data.Beli.Value,
        fragment = LocalPlayer.Data.Fragments.Value,
        timestamp = os.time(),
        items = {
            CDK = (LocalPlayer.Backpack:FindFirstChild("Cursed Dual Katana") ~= nil) or (LocalPlayer.Character:FindFirstChild("Cursed Dual Katana") ~= nil),
            Valk = (LocalPlayer.Backpack:FindFirstChild("Valkyrie Helm") ~= nil) or (LocalPlayer.Character:FindFirstChild("Valkyrie Helm") ~= nil),
            Mirror = (LocalPlayer.Backpack:FindFirstChild("Mirror Fractal") ~= nil) or (LocalPlayer.Character:FindFirstChild("Mirror Fractal") ~= nil),
            Godhuman = (LocalPlayer.Backpack:FindFirstChild("Godhuman") ~= nil) or (LocalPlayer.Character:FindFirstChild("Godhuman") ~= nil)
        }
    }
end

-- C·∫≠p nh·∫≠t UI m·ªói 10s
spawn(function()
    while true do
        local data = getAccountData()
        updateStatusUI(data)
        wait(10)
    end
end)

-- G·ª≠i d·ªØ li·ªáu v·ªÅ server Flask m·ªói 60s
spawn(function()
    while true do
        local success, err = pcall(function()
            local data = getAccountData()
            local response = http_request({
                Url = "http://e0c9-42-119-148-21.ngrok-free.app/",  -- C·∫≠p nh·∫≠t URL Ngrok
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = HttpService:JSONEncode(data)
            })
            rconsoleprint("[‚úÖ G·ª¨I]: " .. data.username .. "\n")
        end)

        if not success then
            rconsolewarn("[‚ùå L·ªñI]: " .. tostring(err))
        end

        wait(60)
    end
end)

-- Ph·∫ßn b·∫£ng tr·∫°ng th√°i (menu) s·ª≠a l·ªói
local drawingObjects = {} -- L∆∞u c√°c Drawing objects

-- X√≥a c√°c object c≈©
local function clearDrawingObjects()
    for _, obj in pairs(drawingObjects) do
        obj:Remove()
    end
    drawingObjects = {}
end

-- H√†m t√≠nh t·ªïng chi·ªÅu r·ªông c·ªôt ƒë·∫øn c·ªôt i
local function sumColWidths(colWidths, i)
    local sum = 0
    for j = 1, i do
        sum = sum + colWidths[j]
    end
    return sum
end

-- V·∫Ω b·∫£ng tr·∫°ng th√°i t·ª´ nhi·ªÅu acc
local function drawStatusBoard(players)
    clearDrawingObjects() -- X√≥a tr∆∞·ªõc khi v·∫Ω m·ªõi

    local baseX, baseY = 850, 10 -- G√≥c tr√™n b√™n ph·∫£i (ƒëi·ªÅu ch·ªânh theo m√†n h√¨nh)
    local rowHeight = 25
    local colWidths = {200, 60, 80, 60, 80} -- Chi·ªÅu r·ªông c·ªôt
    local headers = {"Username", "CDK", "Mirror", "Valk", "God"}
    local padding = 10 -- Kho·∫£ng c√°ch khung so v·ªõi b·∫£ng

    -- T√≠nh chi·ªÅu cao v√† chi·ªÅu r·ªông c·ªßa b·∫£ng
    local tableWidth = sumColWidths(colWidths, #colWidths - 1) + colWidths[#colWidths]
    local tableHeight = rowHeight * (#players + 1) -- +1 cho header

    -- V·∫Ω khung tr·∫Øng
    local frame = Drawing.new("Square")
    frame.Position = Vector2.new(baseX - padding, baseY - padding)
    frame.Size = Vector2.new(tableWidth + 2 * padding, tableHeight + 2 * padding)
    frame.Color = Color3.fromRGB(255, 255, 255) -- M√†u tr·∫Øng
    frame.Thickness = 2 -- ƒê·ªô d√†y khung
    frame.Filled = false -- Kh√¥ng t√¥ m√†u b√™n trong
    frame.Visible = true
    table.insert(drawingObjects, frame)

    -- Header
    for i, header in ipairs(headers) do
        local text = Drawing.new("Text")
        text.Text = header
        text.Position = Vector2.new(baseX + sumColWidths(colWidths, i - 1), baseY)
        text.Size = 18
        text.Color = Color3.fromRGB(255, 255, 255)
        text.Outline = true
        text.Visible = true
        table.insert(drawingObjects, text)
    end

    -- N·ªôi dung b·∫£ng
    for i, player in ipairs(players) do
        local yPos = baseY + rowHeight * i
        for j, header in ipairs(headers) do
            local text = Drawing.new("Text")
            text.Text = player[header] or "" -- T·ª± ƒë·ªông ƒëi·ªÅn c√°c gi√° tr·ªã t∆∞∆°ng ·ª©ng
            text.Position = Vector2.new(baseX + sumColWidths(colWidths, j - 1), yPos)
            text.Size = 16
            text.Color = Color3.fromRGB(255, 255, 255)
            text.Outline = true
            text.Visible = true
            table.insert(drawingObjects, text)
        end
    end
end
